security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        coffee_list:
            pattern:  ^/api/coffee/list
            stateless: true
            anonymous: true
        register:
            pattern:  ^/api/register
            stateless: true
            anonymous: true
        login:
            pattern:  ^/api/(login|authorize)
            stateless: true
            anonymous: true
        api:
            pattern: ^/
            stateless: true
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/(login|authorize), role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/coffee/list, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, role: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
